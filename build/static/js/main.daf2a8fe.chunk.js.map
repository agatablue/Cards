{"version":3,"sources":["questions.js","components/Card.js","components/Deck.js","App.js","serviceWorker.js","index.js"],"names":["questions","id","quest","Card","props","i","x","y","rot","scale","trans","bind","cards","objs","react_default","a","createElement","hooks","div","key","style","transform","interpolate","concat","Object","assign","className","Deck","to","from","changeBoard","console","log","_useState","useState","Set","gone","slicedToArray","_useSprings","useSprings","length","_objectSpread","_useSprings2","animatedCards","set","useEffect","useGesture","_ref","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","delay","undefined","config","friction","tension","size","setTimeout","clear","cardsElements","map","_ref2","components_Card","onClick","App","_useState2","isBoardChaged","setChange","_useState3","_useState4","numberOfBoard","setBoard","_useState5","toConsumableArray","Array","_","_useState6","setCards","_useState7","slice","_useState8","currentBoard","setCurrentBoard","_useState9","lastPartOfCards","_useState11","Math","ceil","maxBoards","components_Deck","random","r","s","nextBoard","indexOfLastCard","indexOfFirstCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.daf2a8fe.chunk.js","sourcesContent":["export default [\n    {\n        id: 1,\n        quest: \"Czy kiedykolwiek coś ukradłeś/aś?\"\n    },\n    {\n        id: 2,\n        quest: \"Czy kiedykolwiek spotkałeś/aś kogoś, kogo jesteś wielkim fanem?\"\n    },\n    {\n        id: 3,\n        quest: \"Co ostatnio robiłeś/aś po raz pierwszy?\"\n    },\n    {\n        id: 4,\n        quest: \"Jak wyglądałby Twój idealny dzień?\"\n    },\n    {\n        id: 5,\n        quest: \"Gdybyś miał/miała napisać ksiąkę, to o czym by była?\"\n    },\n    {\n        id: 6,\n        quest: \"Jaka była Twoja najdziwniejsza randka?\"\n    },\n    {\n        id: 7,\n        quest: \"Najważniejsza rzecz jaką zaplanowałeś/aś w tym roku to ...\"\n    },\n    {\n        id: 8,\n        quest: \"Jaka jest Twoja lista marzeń?\"\n    },\n    {\n        id: 9,\n        quest: \"Twoja ukryta tajemna moc? (talent)?\"\n    },\n    {\n        id: 10,\n        quest: \"Twoje ulubione miejsce poza domem (restauracja, muzeum, miejsce w lesie, itp. )?\"\n    },\n    {\n        id: 11,\n        quest: \"Twoja ulubiona piosenka, mająca ponad 20 lat?\"\n    },\n    {\n        id: 12,\n        quest: \"Twoja platoniczna miłość z okresu nastoletniego to ...\"\n    },\n    {\n        id: 13,\n        quest: \"Kim chciałeś/aś być w dzieciństwie?\"\n    },\n    {\n        id: 14,\n        quest: \"Co najbardziej cenisz w swojej pracy?\"\n    },\n    {\n        id: 15,\n        quest: \"Czy próbowałeś/aś czegoś w życiu, czego już nigdy, przenigdy nie spróbujesz?\"\n    },\n    {\n        id: 16,\n        quest: \"Najlepszy moment z ostatnich 12 miesięcy to ...\"\n    },\n    {\n        id: 17,\n        quest: \"Jeśli mogłabyś/mógłbyś wypić herbatę ze znanym aktorem/aktorką to kto by to był?.\"\n    }\n]","import React from \"react\";\nimport { animated, interpolate } from \"react-spring/hooks\";\n\nfunction Card(props) {\n    const { i, x, y, rot, scale, trans, cards, bind, objs } = props;\n\n    // const { name, age, distance, text, pics } = objs[i];\n    const {quest} = objs[i];\n\n    return (\n      <animated.div\n        key={i}\n        style={{\n          transform: interpolate(\n            [x, y],\n            (x, y) => `translate3d(${x}px,${y}px,0)`\n          )\n        }}\n      >\n        <animated.div\n          {...bind(i)}\n          style={{\n            transform: interpolate([rot, scale], trans)\n          }}\n        >\n          <div className=\"card\">\n            <span>Pytanie {i}</span>\n            <h2>{quest}</h2>\n          </div>\n        </animated.div>\n      </animated.div>\n    );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\nimport Card from \"./Card\";\n\nimport \"../sass/Deck.css\";\n\n\nfunction Deck(props) {\n  const {cards, to, from, trans, objs, changeBoard} = props;\n  console.log(\"w  Deck\", cards)\n\n  let [gone] = useState(() => new Set());\n  const [animatedCards, set] = useSprings(cards.length, i => ({\n    ...to(i),\n    from: from(i)\n  }));\n\n  useEffect(()=> {\n    // component.forceUpdate()\n  })\n\n  let bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n      const trigger = velocity > 0.2;\n\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger) gone.add(index);\n\n      set(i => {\n        if (index !== i) return;\n        const isGone = gone.has(index);\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n\n        const scale = down ? 1.1 : 1;\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\n        };\n      });\n\n      if (!down && gone.size === cards.length)\n        setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }\n  );\n \n\n\n  const cardsElements = animatedCards.map(({ x, y, rot, scale }, i) => (\n    <Card\n      key={i}\n      i={i}\n      x={x}\n      y={y}\n      rot={rot}\n      scale={scale}\n      trans={trans}\n      cards={cards}\n      objs={objs}\n      bind={bind}\n    />\n  ));\n\n  return <section className=\"board\">\n    <button onClick={changeBoard}>More</button>\n    <article className=\"board__cards\">\n      {cardsElements}\n    </article>\n  </section>\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from 'react';\nimport questions from './questions'\n// import './App.css';\nimport Deck from \"./components/Deck\";\nimport objs from './questions'\n\n\nconst App = () => {\n  const [isBoardChaged, setChange] = useState(false)\n  const [numberOfBoard, setBoard] = useState(1);\n  const [cards, setCards] = useState(()=> [...Array(10)].map((_,i) => i+1) )\n  const [currentBoard, setCurrentBoard] = useState(objs.slice(0, 10))\n  const [lastPartOfCards] = useState(()=> objs.length % 10 === 0 ? 10 : objs.length % 10)\n  const [maxBoards] =  useState(Math.ceil(objs.length / 10))\n\n\n\n  const changeBoard = () => {\n    let nextBoard = numberOfBoard + 1;\n    if(nextBoard > maxBoards) {\n      nextBoard = 1;\n      setBoard(1);\n    }\n    else {\n      setBoard(nextBoard);\n    }\n    const indexOfLastCard = (nextBoard) * 10;\n    const indexOfFirstCard = indexOfLastCard - 10;\n    if((numberOfBoard+1) === maxBoards && lastPartOfCards != 10) {\n      setCards([...Array(lastPartOfCards)].map((_,i) => i+1))\n    }\n    setCurrentBoard(objs.slice(indexOfFirstCard, indexOfLastCard));\n    setChange(true)\n  }\n\n  useEffect(()=> {\n    setTimeout(()=> {\n      setChange(false)\n    }, 1)\n  })\n\n  \n  const to = i => ({\n    x: 0,\n    y: i * -7,\n    scale: 1,\n    rot: -7 + Math.random() * 20,\n    delay: i * 100\n  });\n  const from = i => ({ rot: 0, scale: 1.5, y: -1000 });\n  \n  const trans = (r, s) =>\n    `perspective(1500px) rotateX(30deg) rotateY(${r /\n      10}deg) rotateZ(${r}deg) scale(${s})`;\n\n    let deck;\n    if(isBoardChaged) {\n      return <div className=\"card\"></div>\n    } else \n    return <Deck cards={cards}\n                to={to}\n                from={from}\n                trans={trans}\n                objs={currentBoard}\n                changeBoard={changeBoard}\n    />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}